<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <OutputPath>$(SolutionDir)$(Configuration)\$(Platform)</OutputPath>
    <DocumentationFile>$(OutputPath)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>

  <!-- Target CompactFramework 3.5 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net35-cf'">
    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <TargetFrameworkProfile>CompactFramework</TargetFrameworkProfile>

    <FrameworkPathOverride>$(MSBuildProgramFiles32)\Microsoft.NET\SDK\CompactFramework\v3.5\WindowsCE</FrameworkPathOverride>

    <RequiresFrameworkAssemblyReferences>true</RequiresFrameworkAssemblyReferences>

    <DefineConstants>$(DefineConstants);WindowsCE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_APPLICATIONEXCEPTION</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_ICLONEABLE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_RUNTIME_INTEROPSERVICES_COMVISIBLEATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_RUNTIME_INTEROPSERVICES_GUIDATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_SERIALIZABLEATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_STRING_TOUPPER_CULTUREINFO</DefineConstants>
  </PropertyGroup>

  <!-- Client Profile frameworks don't have built-in shortcuts, so we need to specify these. -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net35-client' ">
    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net40-client' ">
    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net403-client' ">
    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.0.3</TargetFrameworkVersion>
  </PropertyGroup>

  <!-- .NETStandard is the replacement for traditional / "old-style" PCLs, but
       there are still some platforms not covered by even .NETStandard 1.0 that
       we'd like to target, thus we still build some "old-style" PCLs. -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'portable40-net40+sl5+win8+wp8+wpa81' ">
    <TargetFrameworkIdentifier>.NETPortable</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile328</TargetFrameworkProfile>

    <RequiresFrameworkAssemblyReferences>true</RequiresFrameworkAssemblyReferences>

    <DefineConstants>$(DefineConstants);PCL</DefineConstants>
    <DefineConstants>$(DefineConstants);FEATURE_DEFAULT_PARAMETERS</DefineConstants>
    <DefineConstants>$(DefineConstants);FEATURE_INTERFACE_VARIANCE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_DOUBLE_TRYPARSE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_LAZY_T</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_STRING_TOUPPERINVARIANT</DefineConstants>
  </PropertyGroup>

  <!-- Profile328 does not support LINQ-to-XML.  Weirdly, even though the only apparent difference
       between Profile328 and Profile336 is .NET 4.0 vs. 4.0.3, the latter supports LINQ-to-XML,
       whereas the former does not, even though LINQ-to-XML was added in .NET 3.5.  So if we want
       the PCL version of NetTopologySuite to support LINQ-to-XML, it needs to be on Profile336, so
       it needs to have GeoAPI target Profile336. -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'portable40-net403+sl5+win8+wp8+wpa81' ">
    <TargetFrameworkIdentifier>.NETPortable</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile336</TargetFrameworkProfile>

    <RequiresFrameworkAssemblyReferences>true</RequiresFrameworkAssemblyReferences>

    <DefineConstants>$(DefineConstants);PCL</DefineConstants>
    <DefineConstants>$(DefineConstants);FEATURE_DEFAULT_PARAMETERS</DefineConstants>
    <DefineConstants>$(DefineConstants);FEATURE_INTERFACE_VARIANCE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_DOUBLE_TRYPARSE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_LAZY_T</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_STRING_TOUPPERINVARIANT</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net20' Or '$(TargetFramework)' == 'net35' Or '$(TargetFramework)' == 'net35-client' Or '$(TargetFramework)' == 'net40' Or '$(TargetFramework)' == 'net40-client' Or '$(TargetFramework)' == 'net403' Or '$(TargetFramework)' == 'net403-client' Or '$(TargetFramework)' == 'net45' ">
    <RequiresFrameworkAssemblyReferences>true</RequiresFrameworkAssemblyReferences>
    <DebugType>full</DebugType>

    <!-- NetFX targets set GeometryServiceProvider.Instance using reflection if it's not explicitly
         set externally before the first access.  This is sketchy at best (it won't work if, e.g.,
         someone tries this before the first thing loads NetTopologySuite into the AppDomain), so
         other targets need to either explicitly bootstrap or just not use that global variable. -->
    <DefineConstants>$(DefineConstants);COMPAT_BOOTSTRAP_USING_REFLECTION</DefineConstants>

    <DefineConstants>$(DefineConstants);FEATURE_DEFAULT_PARAMETERS</DefineConstants>
    <DefineConstants>$(DefineConstants);FEATURE_INTERFACE_VARIANCE</DefineConstants>

    <DefineConstants>$(DefineConstants);HAS_SYSTEM_APPDOMAIN_GETASSEMBLIES</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_APPLICATIONEXCEPTION</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_DOUBLE_TRYPARSE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_ICLONEABLE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_REFLECTION_ASSEMBLY_GETEXPORTEDTYPES</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_RUNTIME_INTEROPSERVICES_COMVISIBLEATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_RUNTIME_INTEROPSERVICES_GUIDATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_SERIALIZABLEATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_STRING_TOUPPERINVARIANT</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_STRING_TOUPPER_CULTUREINFO</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net40' Or '$(TargetFramework)' == 'net40-client' Or '$(TargetFramework)' == 'net403' Or '$(TargetFramework)' == 'net403-client' Or '$(TargetFramework)' == 'net45' ">
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_LAZY_T</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard1.0' ">
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard1.0' Or '$(TargetFramework)' == 'netstandard2.0' ">
    <DefineConstants>$(DefineConstants);FEATURE_DEFAULT_PARAMETERS</DefineConstants>
    <DefineConstants>$(DefineConstants);FEATURE_INTERFACE_VARIANCE</DefineConstants>

    <DefineConstants>$(DefineConstants);HAS_SYSTEM_DOUBLE_TRYPARSE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_LAZY_T</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_STRING_TOUPPERINVARIANT</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_APPDOMAIN_GETASSEMBLIES</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_APPLICATIONEXCEPTION</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_ICLONEABLE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_SERIALIZABLEATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SYSTEM_STRING_TOUPPER_CULTUREINFO</DefineConstants>
  </PropertyGroup>
</Project>
